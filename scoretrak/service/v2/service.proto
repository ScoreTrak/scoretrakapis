syntax = "proto3";

package scoretrak.service.v2;

import "google/protobuf/wrappers.proto";
import "scoretrak/check/v1/check.proto";
import "scoretrak/property/v1/property.proto";
import "scoretrak/proto/v1/uuid.proto";

message Service {
  scoretrak.proto.v1.UUID id = 1;
  string name = 2;
  string display_name = 3;
  google.protobuf.UInt64Value weight = 4;
  google.protobuf.UInt64Value points_boost = 5;
  uint64 round_units = 6;
  google.protobuf.UInt64Value round_delay = 7;
  scoretrak.proto.v1.UUID service_group_id = 8;
  scoretrak.proto.v1.UUID host_id = 9;
  google.protobuf.BoolValue hide = 10;
  google.protobuf.BoolValue pause = 11;
  repeated scoretrak.property.v1.Property properties = 12;
  repeated scoretrak.check.v1.Check checks = 13;
}

message ServiceServiceGetAllRequest {}
message ServiceServiceGetAllResponse {
  repeated Service services = 1;
}

message ServiceServiceGetByIDRequest {
  scoretrak.proto.v1.UUID id = 1;
}
message ServiceServiceGetByIDResponse {
  Service service = 1;
}

message ServiceServiceDeleteRequest {
  scoretrak.proto.v1.UUID id = 1;
}

message ServiceServiceDeleteResponse {}

message ServiceServiceStoreRequest {
  repeated Service services = 1;
}

message ServiceServiceStoreResponse {
  repeated scoretrak.proto.v1.UUID ids = 1;
}

message ServiceServiceUpdateRequest {
  Service service = 1;
}

message ServiceServiceUpdateResponse {}

message ServiceServiceTestServiceRequest {
  scoretrak.proto.v1.UUID id = 1;
}

message ServiceServiceTestServiceResponse {
  scoretrak.check.v1.Check check = 1;
}

service ServiceService {
  rpc GetAll(ServiceServiceGetAllRequest) returns (ServiceServiceGetAllResponse) {}
  rpc GetByID(ServiceServiceGetByIDRequest) returns (ServiceServiceGetByIDResponse) {}
  rpc Delete(ServiceServiceDeleteRequest) returns (ServiceServiceDeleteResponse) {}
  rpc Store(ServiceServiceStoreRequest) returns (ServiceServiceStoreResponse) {}
  rpc Update(ServiceServiceUpdateRequest) returns (ServiceServiceUpdateResponse) {}
  rpc TestService(ServiceServiceTestServiceRequest) returns (ServiceServiceTestServiceResponse) {}
}

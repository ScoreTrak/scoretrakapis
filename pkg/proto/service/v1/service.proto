syntax = "proto3";
package pkg.proto.service.v1;

import "google/protobuf/wrappers.proto";
import "pkg/proto/proto/v1/uuid.proto";
import "pkg/proto/property/v1/property.proto";
import "pkg/proto/check/v1/check.proto";

option go_package = "github.com/pkg/proto/service/v1";

message Service {
  scoretrak.proto.v1.UUID id = 1;
  string name = 2;
  string display_name = 3;
  google.protobuf.UInt64Value weight = 4;
  google.protobuf.UInt64Value points_boost = 5;
  uint64 round_units = 6;
  google.protobuf.UInt64Value round_delay = 7;
  scoretrak.proto.v1.UUID service_group_id = 8;
  scoretrak.proto.v1.UUID host_id = 9;
  google.protobuf.BoolValue hide = 10;
  google.protobuf.BoolValue pause = 11;
  repeated scoretrak.property.v1.Property properties = 12;
  repeated scoretrak.check.v1.Check checks = 13;
}

message GetAllRequest{}
message GetAllResponse{
  repeated Service services = 1;
}

message GetByIDRequest{
  scoretrak.proto.v1.UUID id = 1;
}
message GetByIDResponse{
  Service service = 1;
}

message DeleteRequest{
  scoretrak.proto.v1.UUID id = 1;
}

message DeleteResponse{}

message StoreRequest{
  repeated Service services = 1;
}

message StoreResponse{
  repeated scoretrak.proto.v1.UUID ids = 1;
}

message UpdateRequest{
  Service service = 1;
}

message UpdateResponse{}


message TestServiceRequest{
  scoretrak.proto.v1.UUID id = 1;
}

message TestServiceResponse{
  scoretrak.check.v1.Check check = 1;
}

service ServiceService{
  rpc GetAll(GetAllRequest) returns (GetAllResponse){}
  rpc GetByID(GetByIDRequest) returns (GetByIDResponse){}
  rpc Delete(DeleteRequest) returns (DeleteResponse){}
  rpc Store(StoreRequest) returns (StoreResponse) {}
  rpc Update(UpdateRequest) returns (UpdateResponse) {}
  rpc TestService(TestServiceRequest) returns (TestServiceResponse) {}
}

syntax = "proto3";
package pkg.proto.round.v1;

import "google/protobuf/timestamp.proto";
import "pkg/proto/check/v1/check.proto";

option go_package = "github.com/ScoreTrak/pkg/proto/round/v1";

message Round {
  uint64 id = 1;
  google.protobuf.Timestamp start = 2;
  string note = 3;
  string err = 4;
  google.protobuf.Timestamp finish = 5;
  repeated pkg.proto.check.v1.Check checks = 6;
}

message GetAllRequest{}
message GetAllResponse{
  repeated Round rounds = 1;
}

message GetByIDRequest{
  uint64 id = 1;
}
message GetByIDResponse{
  Round round = 1;
}

message GetLastRoundRequest{}
message GetLastRoundResponse{
  Round round = 1;
}

message GetLastNonElapsingRoundRequest{}
message GetLastNonElapsingRoundResponse{
  Round round = 1;
}


service RoundService{

  rpc GetLastNonElapsingRound(GetLastNonElapsingRoundRequest) returns (GetLastNonElapsingRoundResponse){}
  rpc GetAll(GetAllRequest) returns (GetAllResponse){}
  rpc GetByID(GetByIDRequest) returns (GetByIDResponse){}
  rpc GetLastRound(GetLastRoundRequest) returns (GetLastRoundResponse){}

}
